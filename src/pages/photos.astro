---
// Component Imports
// You can import components from any supported Framework here!
import VueCounter from '../components/VueCounter.vue';
import GithubRepos from '../components/homepage/GithubRepos.vue'
import BaseHead from '../components/BaseHead.astro';
import BlogHeader from '../components/BlogHeader.astro';
import BlogPostPreview from '../components/BlogPostPreview.astro';
import Footer from "../components/Footer.astro";

interface MarkdownFrontmatter {
    publishDate: number;
}
// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = 'Photos';

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/

// call pixels api to get my collection

const pixelApiKey = "563492ad6f9170000100000175f5e0afc1be42c6a92f04397e7bee07";
const myCollectionsResp = await fetch("https://api.pexels.com/v1/collections", {
    headers: {
        "Authorization": pixelApiKey
    }
})

const myCollection = await myCollectionsResp.json()

const dallECollectionId = myCollection?.collections[0]?.id

// fetch dalle collection from pexels api
const dallECollectionResp = await fetch(`https://api.pexels.com/v1/collections/${dallECollectionId}?per_page=80`, {
    headers: {
        "Authorization": pixelApiKey
    }
})

const dallECollection = await dallECollectionResp.json()

const dallEImages = dallECollection?.media?.map(photo => {
    return {
        src: photo.src.original,
        alt: photo.photographer
    }
})
---

<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>{title}</title>
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="stylesheet" href={'../styles/global.css'}>
    <link rel="stylesheet" href={'../styles/home.css'}>
    <link rel="stylesheet" href={'../styles/blog.css'} />

    <style>
        body {
            font-family: Arial;
            margin: 0;
        }

        * {
            box-sizing: border-box;
        }

        img {
            vertical-align: middle;
        }

        /* Position the image container (needed to position the left and right arrows) */
        .container {
            position: relative;
        }

        /* Hide the images by default */
        .mySlides {
            display: none;
        }

        /* Add a pointer when hovering over the thumbnail images */
        .cursor {
            cursor: pointer;
        }

        /* Next & previous buttons */
        .prev,
        .next {
            cursor: pointer;
            position: absolute;
            top: 40%;
            width: auto;
            padding: 16px;
            margin-top: -50px;
            color: white;
            font-weight: bold;
            font-size: 20px;
            border-radius: 0 3px 3px 0;
            user-select: none;
            -webkit-user-select: none;
        }

        /* Position the "next button" to the right */
        .next {
            right: 0;
            border-radius: 3px 0 0 3px;
        }

        /* On hover, add a black background color with a little bit see-through */
        .prev:hover,
        .next:hover {
            background-color: rgba(0, 0, 0, 0.8);
        }

        /* Number text (1/3 etc) */
        .numbertext {
            color: #f2f2f2;
            font-size: 12px;
            padding: 8px 12px;
            position: absolute;
            top: 0;
        }

        /* Container for image text */
        .caption-container {
            text-align: center;
            background-color: #222;
            padding: 2px 16px;
            color: white;
        }

        .row:after {
            content: "";
            display: table;
            clear: both;
        }

        /* Six columns side by side */
        .column {
            float: left;
            width: 16.66%;
        }

        /* Add a transparency effect for thumnbail images */
        .demo {
            opacity: 0.6;
        }

        .active,
        .demo:hover {
            opacity: 1;
        }
    </style>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    <script>
        (adsbygoogle = window.adsbygoogle || []).push({
            google_ad_client: "ca-pub-2479144310234386",
            enable_page_level_ads: true
        });
    </script>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-119155027-6"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-119155027-6');
    </script>
    <style>
        header {
            width: 100%;
            height: 100%;
            background-color: var(--theme-bg-offset);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .content {
            margin-top: 4rem;
            margin-bottom: 8rem;
            min-width: 80vw;
        }

        .content :global(main > * + *) {
            margin-top: 1rem;
        }

        .intro {
            padding-bottom: 4rem;
            margin-bottom: 2rem;
            border-bottom: 4px solid var(--theme-divider);
        }

        .intro>* {
            margin: 0;
        }

        .latest {
            font-size: 2.5rem;
            font-weight: 700;
        }
    </style>
            
<script type="text/javascript">
    let slideIndex = 1;
    showSlides(slideIndex);
    
    function plusSlides(n) {
      showSlides(slideIndex += n);
    }
    
    function currentSlide(n) {
      showSlides(slideIndex = n);
    }
    
    function showSlides(n) {
      let i;
      let slides = document.getElementsByClassName("mySlides");
      let dots = document.getElementsByClassName("demo");
      let captionText = document.getElementById("caption");
      if (n > slides.length) {slideIndex = 1}
      if (n < 1) {slideIndex = slides.length}
      for (i = 0; i < slides.length; i++) {
        slides[i].style.display = "none";
      }
      for (i = 0; i < dots.length; i++) {
        dots[i].className = dots[i].className.replace(" active", "");
      }
      slides[slideIndex-1].style.display = "block";
      dots[slideIndex-1].className += " active";
      captionText.innerHTML = dots[slideIndex-1].alt;
    }
    </script>
</head>

<body>
    <BlogHeader />
    
    <div class="wrapper">
        <main class="content">

            <h2 style="text-align:center">Slideshow Gallery</h2>
            <p> Here are all my images generated by dall-e. Free feel to message to get more information or request a prompt.</p>

            <div class="container">
                {
                    dallEImages.map((dalle, index) => {
                        return (
                            <div class="mySlides">
                                <div class="numbertext">{index} / {dallEImages.length}</div>
                                <img src={dalle.src} style="width:100%" />
                            </div>
                        )
                    })
                }
                
              <a class="prev" onclick="plusSlides(-1)">❮</a>
              <a class="next" onclick="plusSlides(1)">❯</a>
            
              <div class="caption-container">
                <p id="caption"></p>
              </div>
            
              <div class="row">

                {
                    dallEImages.map((dalle, index) => {
                        return (
                            <div class="column">
                                <img class="demo cursor" src={dalle.src} style="width:100%" onclick={`currentSlide(${index})`} alt={dalle.alt} />
                            </div>
                        )
                    })
                }
              </div>
            </div>
            <Footer />
        </main>
    </div>
</body>

</html>