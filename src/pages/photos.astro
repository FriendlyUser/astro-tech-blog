---
import { Footer } from '@/partials/Footer';
import { Hero } from '@/partials/Hero';
import { Navbar } from '@/partials/Navbar';
import { AppConfig } from '@/utils/AppConfig';
import Base from '@/templates/Base.astro';

import BottomSection from '../partials/BottomSection.astro';

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/

// call pixels api to get my collection

const pixelApiKey = '563492ad6f9170000100000175f5e0afc1be42c6a92f04397e7bee07';
const myCollectionsResp = await fetch('https://api.pexels.com/v1/collections', {
  headers: {
    Authorization: pixelApiKey,
  },
});

const myCollection = await myCollectionsResp.json();

const dallECollectionId = myCollection?.collections[0]?.id;

// fetch dalle collection from pexels api
const dallECollectionResp = await fetch(
  `https://api.pexels.com/v1/collections/${dallECollectionId}?per_page=80`,
  {
    headers: {
      Authorization: pixelApiKey,
    },
  }
);

const dallECollection = await dallECollectionResp.json();

const dallEImages = dallECollection?.media?.map((photo) => {
  return {
    src: photo?.src?.original,
    alt: photo?.photographer,
  };
});
const title = "Photos"
const description = "Here are all my images generated by dall-e. Free feel to message to get more information or request a prompt"
---

<Base head={{ title, description }}>
  <style>
    /* img {
          vertical-align: middle;
      } */

    /* Hide the images by default */
    .mySlides {
      display: none;
    }

    /* Add a pointer when hovering over the thumbnail images */
    .cursor {
      cursor: pointer;
    }

    /* Next & previous buttons */
    .photoprev,
    .photonext {
      cursor: pointer;
      position: absolute;
      top: 40%;
      width: auto;
      padding: 16px;
      margin-top: -50px;
      color: white;
      font-weight: bold;
      font-size: 20px;
      border-radius: 0 3px 3px 0;
      user-select: none;
      -webkit-user-select: none;
    }

    /* Position the "next button" to the right */
    .photonext {
      right: 0;
      border-radius: 3px 0 0 3px;
    }

    /* On hover, add a black background color with a little bit see-through */
    .photoprev:hover,
    .photonext:hover {
      background-color: rgba(0, 0, 0, 0.8);
    }
    .container {
      position: relative;
      width: 100%;
    }

    /* Number text (1/3 etc) */
    .numbertext {
      color: #f2f2f2;
      font-size: 12px;
      padding: 8px 12px;
      position: absolute;
      top: 0;
    }

    /* Container for image text */
    .caption-container {
      text-align: center;
      background-color: #222;
      padding: 2px 16px;
      color: white;
    }

    .photoRow:after {
      content: '';
      display: table;
      clear: both;
    }

    /* Six columns side by side */
    .photoColumn {
      float: left;
      width: 16.66%;
    }

    /* Add a transparency effect for thumnbail images */
    .demo {
      opacity: 0.6;
    }

    .active,
    .demo:hover {
      opacity: 1;
    }

    /* The expanding image container (positioning is needed to position the close button and the text) */
    .photoContainer {
      position: relative;
      display: none;
    }
  </style>
  <body class="bg-slate-900 text-gray-100" data-pagefind-body>
    <Hero />

    <h2 class="text-center">Slideshow Gallery</h2>
    <p class="text-center">
      Here are all my images generated by dall-e. Free feel to message to get
      more information or request a prompt.
    </p>
    <div class="container mx-auto">
      <div>
        {dallEImages?.map((dalle: any, index: number) => {
          return (
            <div class="mySlides">
              <div class="numbertext">
                {index} / {dallEImages.length}
              </div>
              <img src={dalle.src} style="width:100%" />
            </div>
          );
        })}

        <a class="photoprev" onclick="plusSlides(-1)">❮</a>
        <a class="photonext" onclick="plusSlides(1)">❯</a>

        <div class="caption-container">
          <p id="caption"></p>
        </div>

        <div class="photoRow">
          {dallEImages?.map((dalle: any, index: number) => {
            return (
              <div class="photoColumn">
                <img
                  class="demo cursor"
                  src={dalle.src}
                  style="width:100%"
                  onclick={`currentSlide(${index})`}
                  alt={dalle.alt}
                />
              </div>
            );
          })}
        </div>
      </div>
    </div>
    <BottomSection />
  </body>
</Base>